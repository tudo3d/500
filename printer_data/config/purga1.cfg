# KAMP macros with manual purge-location override
# Modified so you can change ONLY ONE setting/command to force the purge location.
# To change purge location at runtime use (single gcode command):
#   SET_GCODE_VARIABLE MACRO=_nivelamento_Settings VARIABLE=variable_purge_override VALUE="X=50,Y=10"
# or edit the variable below in the _nivelamento_Settings section and save.

[gcode_macro LINE_PURGE]
description: A purge macro that adapts to be near your actual printed objects (with manual override)
gcode:
    # Get relevant printer params
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
    {% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
    
    # Use firmware retraction if it is defined
    {% if printer.firmware_retraction is defined %}
        {% set RETRACT = G10 | string %}
        {% set UNRETRACT = G11 | string %}
    {% else %}
        {% set RETRACT = 'G1 E-.5 F2100' | string %}
        {% set UNRETRACT = 'G1 E.5 F2100' | string %}
    {% endif %}

    # Get purge settings from _nivelamento_Settings
    {% set nivelamento = printer["gcode_macro _nivelamento_Settings"] %}
    {% set verbose_enable = nivelamento.verbose_enable | abs %}
    {% set purge_height = nivelamento.purge_height | float %}
    {% set tip_distance = nivelamento.tip_distance | float %}
    {% set purge_margin = nivelamento.purge_margin | float %}
    {% set purge_amount = nivelamento.purge_amount | float %}
    {% set flow_rate = nivelamento.flow_rate | float %}
    SET_GCODE_VARIABLE MACRO=_nivelamento_Settings VARIABLE=purge_override VALUE="X=50,Y=10"

    # Manual override: if variable_purge_override is non-empty, parse it and use that coordinate
    # Accepted formats (case-insensitive, spaces tolerated):
    #   "X=50,Y=10"   or  "50,10"   -> interpreted as X,Y in mm
    {% set override_raw = nivelamento.variable_purge_override | default('') %}
    {% set manual_override = False %}
    {% if override_raw and override_raw|string and override_raw|string != '' %}
        {% set o = override_raw | replace(' ', '') | upper %}
        {% set parts = o.split(',') %}
        {% if parts|length == 2 %}
            {% set ox = parts[0].split('=')[-1] | float %}
            {% set oy = parts[1].split('=')[-1] | float %}
            {% set purge_x_center = ox %}
            {% set purge_y_origin = oy %}
            {% set manual_override = True %}
        {% else %}
            {% set manual_override = False %}
        {% endif %}
    {% endif %}

    # Only calculate automatic object-based locations if there is no manual override
    {% if not manual_override %}
        # Calculate purge origins and centers from objects
        {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}    # Get all object points
        {% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}                          # Object x min
        {% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}                          # Object x max
        {% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}                          # Object y min
        {% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}                          # Object y max

        {% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}      # Create center point of purge line relative to print on X axis
        {% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}      # Create center point of purge line relative to print on Y axis

        {% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}                                  # Add margin to x min, compare to 0, and choose the larger
        {% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}                                  # Add margin to y min, compare to 0, and choose the larger
    {% endif %}

    # Calculate purge speed
    {% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}

    {% if cross_section < 5 %}

        {action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}

    {% else %}

        {% if verbose_enable == True %}

        {action_respond_info("Moving filament tip {}mms".format(                                                                 
            (tip_distance),                                                                                      
        )) }
        {% endif %}

        {% if printer.firmware_retraction is defined %}
            {action_respond_info("nivelamento purge is using firmware retraction.")}
        {% else %}
            {action_respond_info("nivelamento purge is not using firmware retraction, it is recommended to configure it.")}
        {% endif %}

        {% if manual_override %}
            {action_respond_info("Manual purge override active: purging at X={}, Y={}.".format((purge_x_center),(purge_y_origin))) }
        {% elif purge_y_origin > 0 %}

            {action_respond_info("nivelamento purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(                                                                 
                (purge_x_center),
                (purge_y_origin),
                (purge_amount),
                (flow_rate),
            )) }
    
        {% else %}
    
            {action_respond_info("nivelamento purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(                                                                 
                (purge_x_origin),
                (purge_y_center),
                (purge_amount),
                (flow_rate),
            )) }

        {% endif %}

        SAVE_GCODE_STATE NAME=Prepurge_State                                                    # Create gcode state

        {% if manual_override %}                                                         # Manual override: we will purge along X at manual X, manual Y is used as origin

            G92 E0                                                                              # Reset extruder
            G0 F{travel_speed}                                                                  # Set travel speed
            G90                                                                                 # Absolute positioning
            G0 X{purge_x_center} Y{purge_y_origin}                                              # Move to purge position (manual)
            G0 Z{purge_height}                                                                  # Move to purge Z height
            M83                                                                                 # Relative extrusion mode
            G1 E{tip_distance} F{purge_move_speed}                                              # Move filament tip
            G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}             # Purge line
            {RETRACT}                                                                           # Retract
            G0 X{purge_x_center + purge_amount + 10} F{travel_speed}                            # Rapid move to break string
            G92 E0                                                                              # Reset extruder distance
            M82                                                                                 # Absolute extrusion mode
            G0 Z{purge_height * 2} F{travel_speed}                                              # Z hop

        {% elif purge_y_origin > 0 %}                                                             # If there's room on Y, purge along X axis in front of print area

            G92 E0                                                                              # Reset extruder
            G0 F{travel_speed}                                                                  # Set travel speed
            G90                                                                                 # Absolute positioning
            G0 X{purge_x_center} Y{purge_y_origin}                                              # Move to purge position
            G0 Z{purge_height}                                                                  # Move to purge Z height
            M83                                                                                 # Relative extrusion mode
            G1 E{tip_distance} F{purge_move_speed}                                              # Move filament tip
            G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}             # Purge line
            {RETRACT}                                                                           # Retract
            G0 X{purge_x_center + purge_amount + 10} F{travel_speed}                            # Rapid move to break string
            G92 E0                                                                              # Reset extruder distance
            M82                                                                                 # Absolute extrusion mode
            G0 Z{purge_height * 2} F{travel_speed}                                              # Z hop

        {% else %}                                                                              # If there's room on X, purge along Y axis to the left of print area
            
            G92 E0                                                                              # Reset extruder
            G0 F{travel_speed}                                                                  # Set travel speed
            G90                                                                                 # Absolute positioning
            G0 X{purge_x_origin} Y{purge_y_center}                                              # Move to purge position
            G0 Z{purge_height}                                                                  # Move to purge Z height
            M83                                                                                 # Relative extrusion mode
            G1 E{tip_distance} F{purge_move_speed}                                              # Move filament tip
            G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}             # Purge line
            {RETRACT}                                                                           # Retract
            G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}                            # Rapid move to break string
            G92 E0                                                                              # Reset extruder distance
            M82                                                                                 # Absolute extrusion mode
            G0 Z{purge_height * 2} F{travel_speed}                                              # Z hop

        {% endif %}

        RESTORE_GCODE_STATE NAME=Prepurge_State                                                 # Restore gcode state
    
    {% endif %}


[gcode_macro SMART_PARK]
description: Parks your printhead near the print area for pre-print hotend heating.
gcode:

    {% set nivelamento_settings = printer["gcode_macro _nivelamento_Settings"] %}                                                                 # Pull all variables from _KAMP_Settings
    {% set z_height = nivelamento_settings.smart_park_height | float %}                                                                    # Set Z height variable
    {% set purge_margin = nivelamento_settings.purge_margin | float %}                                                                     # Set purge margin variable
    {% set verbose_enable = nivelamento_settings.verbose_enable | abs %}                                                                   # Set verbosity
    {% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}                                                                # Create center point of x for fallback
    {% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}                                                                # Create center point of y for fallback
    {% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
    {% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}                                # Gather all object points
    {% set x_min = all_points | map(attribute=0) | min | default(center_x) %}                                                       # Set x_min from smallest object x point
    {% set y_min = all_points | map(attribute=1) | min | default(center_y) %}                                                       # Set y_min from smallest object y point
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}                                                           # Set travel speed from config

    {% if purge_margin > 0 and x_min != center_x and y_min != center_y %}                                                           # If objects are detected and purge margin 
        {% set x_min = [ x_min - purge_margin , x_min ] | min %}                                                                    # value is greater than 0, move
        {% set y_min = [ y_min - purge_margin , y_min ] | min %}                                                                    # to purge location + margin
        {% set x_min = [ x_min , axis_minimum_x ] | max %}
        {% set y_min = [ y_min , axis_minimum_y ] | max %}
    {% endif %}

                                                                                                                                    # Verbose park location
    {% if verbose_enable == True %}

    { action_respond_info("Smart Park location: {},{}.".format(
        (x_min),
        (y_min),
    )) }

    {% endif %}
    
    SAVE_GCODE_STATE NAME=Presmartpark_State                                                                                        # Create gcode state

    G90                                                                                                                             # Absolute positioning
    {% if printer.toolhead.position.z < z_height %}
        G0 Z{z_height}                                                                                                              # Move Z to park height if current Z position is lower than z_height
    {% endif %}
    G0 X{x_min} Y{y_min} F{travel_speed}                                                                                            # Move near object area
    G0 Z{z_height}                                                                                                                  # Move Z to park height 

    RESTORE_GCODE_STATE NAME=Presmartpark_State       
    # Restore gcode state


[gcode_macro _nivelamento_Settings]
description: This macro contains all adjustable settings for nivelamento 

# The following variables are settings for KAMP as a whole.
variable_verbose_enable: True               # Set to True to enable KAMP information output when running. This is useful for debugging.

# The following variables are for adjusting adaptive mesh settings for KAMP.
variable_mesh_margin: 0                     # Expands the mesh size in millimeters if desired. Leave at 0 to disable.
variable_fuzz_amount: 0                     # Slightly randomizes mesh points to spread out wear from nozzle-based probes. Leave at 0 to disable.

# The following variables are for those with a dockable probe like Klicky, Euclid, etc.                 # ----------------  Attach Macro | Detach Macro
variable_probe_dock_enable: False           # Set to True to enable the usage of a dockable probe.      # ---------------------------------------------
variable_attach_macro: 'Attach_Probe'       # The macro that is used to attach the probe.               # Klicky Probe:   'Attach_Probe' | 'Dock_Probe'
variable_detach_macro: 'Dock_Probe'         # The macro that is used to store the probe.                # Euclid Probe:   'Deploy_Probe' | 'Stow_Probe'
                                                                                                        # Legacy Gcode:   'M401'         | 'M402'

# The following variables are for adjusting adaptive purge settings for KAMP.
variable_purge_height: 0.6                  # Z position of nozzle during purge, default is 0.8.
variable_tip_distance: 23                   # Distance between tip of filament and nozzle before purge. Should be similar to PRINT_END final retract amount.
variable_purge_margin: 40                   # Distance the purge will be in front of the print area, default is 10.
variable_purge_amount: 70                   # Amount of filament to be purged prior to printing.
variable_flow_rate: 16                     # Flow rate of purge in mm3/s. Default is 12.

# The following variables are for adjusting the Smart Park feature for KAMP, which will park the printhead near the print area at a specified height.
variable_smart_park_height: 10              # Z position for Smart Park, default is 10.

# -----------------------------
# Manual purge override (single place to change the purge location)
# Set variable_purge_override to empty string for automatic behavior (default).
# To force a manual purge location set it to either: "X=50,Y=10"  or  "50,10"
# You can change this value in this macro file (permanent) or at runtime with a single command:
#   SET_GCODE_VARIABLE MACRO=_nivelamento_Settings VARIABLE=variable_purge_override VALUE="X=50,Y=10"
# That single SET_GCODE_VARIABLE command is the one-command change you requested.
variable_purge_override: ''

gcode: # Gcode section left intentionally blank. Do not disturb.

    {action_respond_info(" Running the nivelamento_Settings macro does nothing, it is only used for storing nivelamento settings. ")}
